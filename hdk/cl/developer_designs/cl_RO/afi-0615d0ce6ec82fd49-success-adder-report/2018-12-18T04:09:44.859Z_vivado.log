#-----------------------------------------------------------
# Vivado v2018.2_AR71275_op (64-bit)
# SW Build 2258646 on Thu Jun 14 20:02:38 MDT 2018
# IP Build 2256618 on Thu Jun 14 22:10:49 MDT 2018
# Start of session at: Tue Dec 18 04:12:29 2018
# Process ID: 1891
# Current directory: /home/builder/scripts
# Command line: vivado -mode batch -source ingest.tcl
# Log file: /home/builder/scripts/vivado.log
# Journal file: /home/builder/scripts/vivado.jou
#-----------------------------------------------------------
source ingest.tcl
# set userDCP "../checkpoints/SH_CL_routed.dcp"
# set awsDCP  "../checkpoints/SH_CL_BB_routed.dcp"
# set powerDefaultRPT "../reports/power_report.default.rpt"
# set powerStaticRPT  "../reports/power_report.static.rpt"
# set timingRPT       "../reports/SH_CL_final_timing_summary.rpt"
# set ioRPT           "../reports/report_io.rpt"
# set partialBIT      "../bitstreams/SH_CL_final_pblock_CL_partial.bit"
# set partialLTX      "../bitstreams/SH_CL_final_pblock_CL_partial.ltx"
# set CL_PATH WRAPPER_INST/CL
# puts "Ingest start time: \[[clock format [clock seconds] -format {%a %b %d %H:%M:%S %Y}]\]"
Ingest start time: [Tue Dec 18 04:14:28 2018]
# set_param hd.supportClockNetCrossDiffReconfigurablePartitions 1
# set_param hd.platformVerifyCachedRun false
# check_integrity $userDCP
INFO: [Vivado 12-5531] Integrity check successful: /home/builder/checkpoints/SH_CL_routed.dcp
# set_msg_config -severity INFO -suppress
# set_msg_config -severity STATUS -suppress
# set_msg_config -severity WARNING -suppress
CRITICAL WARNING: [Common 17-1355] You are suppressing all messages of type 'WARNING'. You may potentially disregard important DRC, CDC, and implementation messages that can negatively impact your design.  If this is not desired, please run 'reset_msg_config -suppress -severity {WARNING}' to undo this change.
# set_msg_config -id {Chipscope 16-3} -suppress
# set_msg_config -string {AXI_QUAD_SPI} -suppress
# puts "Opening user DCP $userDCP: \[[clock format [clock seconds] -format {%a %b %d %H:%M:%S %Y}]\]"
Opening user DCP ../checkpoints/SH_CL_routed.dcp: [Tue Dec 18 04:14:31 2018]
# open_checkpoint $userDCP
Read XDEF File: Time (s): cpu = 00:00:18 ; elapsed = 00:00:18 . Memory (MB): peak = 5237.219 ; gain = 452.680 ; free physical = 63976 ; free virtual = 101351
Finished XDEF File Restore: Time (s): cpu = 00:00:18 ; elapsed = 00:00:19 . Memory (MB): peak = 5237.219 ; gain = 452.680 ; free physical = 63974 ; free virtual = 101349
open_checkpoint: Time (s): cpu = 00:02:40 ; elapsed = 00:05:40 . Memory (MB): peak = 5298.277 ; gain = 4005.906 ; free physical = 64040 ; free virtual = 101430
# puts "Checking User DCP is fully routed: \[[clock format [clock seconds] -format {%a %b %d %H:%M:%S %Y}]\]"
Checking User DCP is fully routed: [Tue Dec 18 04:20:11 2018]
# if { [llength [get_nets -hierarchical -filter { ROUTE_STATUS == "UNROUTED" }]] != 0} {
#   puts "***ERROR*** DCP has unrouted nets, ingestion failed, exiting..."
#   exit 1
# }
get_nets: Time (s): cpu = 00:00:35 ; elapsed = 00:00:26 . Memory (MB): peak = 5621.473 ; gain = 323.195 ; free physical = 63801 ; free virtual = 101192
# puts "Running pr_verify on initial DCP vs user DCP: \[[clock format [clock seconds] -format {%a %b %d %H:%M:%S %Y}]\]"
Running pr_verify on initial DCP vs user DCP: [Tue Dec 18 04:20:37 2018]
# pr_verify -full_check -in_memory -additional $awsDCP
Read XDEF File: Time (s): cpu = 00:00:29 ; elapsed = 00:00:29 . Memory (MB): peak = 8168.387 ; gain = 655.898 ; free physical = 61231 ; free virtual = 98623
Finished XDEF File Restore: Time (s): cpu = 00:00:30 ; elapsed = 00:00:30 . Memory (MB): peak = 8168.387 ; gain = 655.898 ; free physical = 61230 ; free virtual = 98622
pr_verify: Time (s): cpu = 00:06:03 ; elapsed = 00:07:47 . Memory (MB): peak = 8570.387 ; gain = 2948.914 ; free physical = 63436 ; free virtual = 100838
# puts "Enabling check for combinatorial loops: \[[clock format [clock seconds] -format {%a %b %d %H:%M:%S %Y}]\]"
Enabling check for combinatorial loops: [Tue Dec 18 04:28:24 2018]
# if { [llength [get_nets -hierarchical -filter {ALLOW_COMBINATORIAL_LOOPS==TRUE}]] != 0} {
#   puts "Negating ALLOW_COMBINATORIAL_LOOPS properties: \[[clock format [clock seconds] -format {%a %b %d %H:%M:%S %Y}]\]"
#   set_property ALLOW_COMBINATORIAL_LOOPS FALSE [get_nets -hier -filter {ALLOW_COMBINATORIAL_LOOPS==TRUE} -quiet] -quiet
# }
# puts "Running write_bitstream for CL: \[[clock format [clock seconds] -format {%a %b %d %H:%M:%S %Y}]\]"
Running write_bitstream for CL: [Tue Dec 18 04:28:28 2018]
# write_bitstream -force -bin_file -cell $CL_PATH $partialBIT
write_bitstream: Time (s): cpu = 00:16:23 ; elapsed = 00:06:10 . Memory (MB): peak = 9914.387 ; gain = 1344.000 ; free physical = 63300 ; free virtual = 100748
# puts "Running write_debug_probes for CL: \[[clock format [clock seconds] -format {%a %b %d %H:%M:%S %Y}]\]"
Running write_debug_probes for CL: [Tue Dec 18 04:34:38 2018]
# write_debug_probes -force -cell $CL_PATH $partialLTX
# report_timing_summary -file $timingRPT
report_timing_summary: Time (s): cpu = 00:02:40 ; elapsed = 00:00:40 . Memory (MB): peak = 9921.410 ; gain = 7.023 ; free physical = 62782 ; free virtual = 100233
# report_io -file $ioRPT
# close [open "../scripts/bitgen_success.txt" "w"]
# set have_prsv [get_cells -hier -regexp ${CL_PATH}.*ddr_stat.*new_scratch_prsv_sh_ddr.*]
# set have_ddr0 [get_cells -hier -regexp ${CL_PATH}.*ddr_cores\.DDR4_0]
# set have_ddr1 [get_cells -hier -regexp ${CL_PATH}.*ddr_cores\.DDR4_1]
# set have_ddr2 [get_cells -hier -regexp ${CL_PATH}.*ddr_cores\.DDR4_2]
# set PRSV_MSG "PRSV"
# set DDR0_MSG "DDR0"
# set DDR1_MSG "DDR1"
# set DDR2_MSG "DDR2"
# if {$have_prsv eq ""} {
#    puts "No data retention support - missing $PRSV_MSG"
# } else {
#    puts "SUPPORTS $PRSV_MSG"
# }
No data retention support - missing PRSV
# if {$have_ddr0 eq ""} {
#    puts "No $DDR0_MSG"
# } else {
#    puts "SUPPORTS $DDR0_MSG"
# }
No DDR0
# if {$have_ddr1 eq ""} {
#    puts "No $DDR1_MSG"
# } else {
#    puts "SUPPORTS $DDR1_MSG"
# }
No DDR1
# if {$have_ddr2 eq ""} {
#    puts "No $DDR2_MSG"
# } else {
#    puts "SUPPORTS $DDR2_MSG"
# }
No DDR2
# puts "Generating default power report: \[[clock format [clock seconds] -format {%a %b %d %H:%M:%S %Y}]\]"
Generating default power report: [Tue Dec 18 04:35:23 2018]
# report_power -file $powerDefaultRPT
report_power: Time (s): cpu = 00:02:29 ; elapsed = 00:01:10 . Memory (MB): peak = 9981.535 ; gain = 60.125 ; free physical = 62424 ; free virtual = 99877
# puts "Generating power report with static switching activity: \[[clock format [clock seconds] -format {%a %b %d %H:%M:%S %Y}]\]"
Generating power report with static switching activity: [Tue Dec 18 04:36:33 2018]
# reset_switching_activity -all
reset_switching_activity: Time (s): cpu = 00:00:17 ; elapsed = 00:00:17 . Memory (MB): peak = 9981.535 ; gain = 0.000 ; free physical = 62342 ; free virtual = 99795
# set_switching_activity -type lut -toggle_rate 12.500000 -static_probability 0.500000 -all
# set_switching_activity -type register -toggle_rate 12.500000 -static_probability 0.500000 -all
# set_switching_activity -type shift_register -toggle_rate 12.500000 -static_probability 0.500000 -all
# set_switching_activity -type lut_ram -toggle_rate 12.500000 -static_probability 0.500000 -all
# set_switching_activity -type bram -toggle_rate 12.500000 -static_probability 0.500000 -all
# set_switching_activity -type dsp -toggle_rate 12.500000 -static_probability 0.500000 -all
# set_switching_activity -type gt_rxdata -toggle_rate 50.000000 -static_probability 0.500000 -all
# set_switching_activity -type gt_txdata -toggle_rate 50.000000 -static_probability 0.500000 -all
# set_switching_activity -type io_output -toggle_rate 12.000000 -static_probability 0.500000 -all
# report_power -file $powerStaticRPT
report_power: Time (s): cpu = 00:01:11 ; elapsed = 00:00:37 . Memory (MB): peak = 9997.547 ; gain = 16.012 ; free physical = 62329 ; free virtual = 99783
# close_design
close_design: Time (s): cpu = 00:00:07 ; elapsed = 00:00:07 . Memory (MB): peak = 9997.547 ; gain = 0.000 ; free physical = 65376 ; free virtual = 102831
# puts "Ingest end time: \[[clock format [clock seconds] -format {%a %b %d %H:%M:%S %Y}]\]"
Ingest end time: [Tue Dec 18 04:37:48 2018]
[stdout]

****** Vivado v2018.2_AR71275_op (64-bit)
  **** SW Build 2258646 on Thu Jun 14 20:02:38 MDT 2018
  **** IP Build 2256618 on Thu Jun 14 22:10:49 MDT 2018
    ** Copyright 1986-2018 Xilinx, Inc. All Rights Reserved.

source ingest.tcl
# set userDCP "../checkpoints/SH_CL_routed.dcp"
# set awsDCP  "../checkpoints/SH_CL_BB_routed.dcp"
# set powerDefaultRPT "../reports/power_report.default.rpt"
# set powerStaticRPT  "../reports/power_report.static.rpt"
# set timingRPT       "../reports/SH_CL_final_timing_summary.rpt"
# set ioRPT           "../reports/report_io.rpt"
# set partialBIT      "../bitstreams/SH_CL_final_pblock_CL_partial.bit"
# set partialLTX      "../bitstreams/SH_CL_final_pblock_CL_partial.ltx"
# set CL_PATH WRAPPER_INST/CL
# puts "Ingest start time: \[[clock format [clock seconds] -format {%a %b %d %H:%M:%S %Y}]\]"
Ingest start time: [Tue Dec 18 04:14:28 2018]
# set_param hd.supportClockNetCrossDiffReconfigurablePartitions 1
# set_param hd.platformVerifyCachedRun false
# check_integrity $userDCP
INFO: [Vivado 12-5531] Integrity check successful: /home/builder/checkpoints/SH_CL_routed.dcp
# set_msg_config -severity INFO -suppress
# set_msg_config -severity STATUS -suppress
# set_msg_config -severity WARNING -suppress
CRITICAL WARNING: [Common 17-1355] You are suppressing all messages of type 'WARNING'. You may potentially disregard important DRC, CDC, and implementation messages that can negatively impact your design.  If this is not desired, please run 'reset_msg_config -suppress -severity {WARNING}' to undo this change.
# set_msg_config -id {Chipscope 16-3} -suppress
# set_msg_config -string {AXI_QUAD_SPI} -suppress
# puts "Opening user DCP $userDCP: \[[clock format [clock seconds] -format {%a %b %d %H:%M:%S %Y}]\]"
Opening user DCP ../checkpoints/SH_CL_routed.dcp: [Tue Dec 18 04:14:31 2018]
# open_checkpoint $userDCP
Read XDEF File: Time (s): cpu = 00:00:18 ; elapsed = 00:00:18 . Memory (MB): peak = 5237.219 ; gain = 452.680 ; free physical = 63976 ; free virtual = 101351
Finished XDEF File Restore: Time (s): cpu = 00:00:18 ; elapsed = 00:00:19 . Memory (MB): peak = 5237.219 ; gain = 452.680 ; free physical = 63974 ; free virtual = 101349
open_checkpoint: Time (s): cpu = 00:02:40 ; elapsed = 00:05:40 . Memory (MB): peak = 5298.277 ; gain = 4005.906 ; free physical = 64040 ; free virtual = 101430
# puts "Checking User DCP is fully routed: \[[clock format [clock seconds] -format {%a %b %d %H:%M:%S %Y}]\]"
Checking User DCP is fully routed: [Tue Dec 18 04:20:11 2018]
# if { [llength [get_nets -hierarchical -filter { ROUTE_STATUS == "UNROUTED" }]] != 0} {
#   puts "***ERROR*** DCP has unrouted nets, ingestion failed, exiting..."
#   exit 1
# }
get_nets: Time (s): cpu = 00:00:35 ; elapsed = 00:00:26 . Memory (MB): peak = 5621.473 ; gain = 323.195 ; free physical = 63801 ; free virtual = 101192
# puts "Running pr_verify on initial DCP vs user DCP: \[[clock format [clock seconds] -format {%a %b %d %H:%M:%S %Y}]\]"
Running pr_verify on initial DCP vs user DCP: [Tue Dec 18 04:20:37 2018]
# pr_verify -full_check -in_memory -additional $awsDCP
Read XDEF File: Time (s): cpu = 00:00:29 ; elapsed = 00:00:29 . Memory (MB): peak = 8168.387 ; gain = 655.898 ; free physical = 61231 ; free virtual = 98623
Finished XDEF File Restore: Time (s): cpu = 00:00:30 ; elapsed = 00:00:30 . Memory (MB): peak = 8168.387 ; gain = 655.898 ; free physical = 61230 ; free virtual = 98622
pr_verify: Time (s): cpu = 00:06:03 ; elapsed = 00:07:47 . Memory (MB): peak = 8570.387 ; gain = 2948.914 ; free physical = 63436 ; free virtual = 100838
# puts "Enabling check for combinatorial loops: \[[clock format [clock seconds] -format {%a %b %d %H:%M:%S %Y}]\]"
Enabling check for combinatorial loops: [Tue Dec 18 04:28:24 2018]
# if { [llength [get_nets -hierarchical -filter {ALLOW_COMBINATORIAL_LOOPS==TRUE}]] != 0} {
#   puts "Negating ALLOW_COMBINATORIAL_LOOPS properties: \[[clock format [clock seconds] -format {%a %b %d %H:%M:%S %Y}]\]"
#   set_property ALLOW_COMBINATORIAL_LOOPS FALSE [get_nets -hier -filter {ALLOW_COMBINATORIAL_LOOPS==TRUE} -quiet] -quiet
# }
# puts "Running write_bitstream for CL: \[[clock format [clock seconds] -format {%a %b %d %H:%M:%S %Y}]\]"
Running write_bitstream for CL: [Tue Dec 18 04:28:28 2018]
# write_bitstream -force -bin_file -cell $CL_PATH $partialBIT
write_bitstream: Time (s): cpu = 00:16:23 ; elapsed = 00:06:10 . Memory (MB): peak = 9914.387 ; gain = 1344.000 ; free physical = 63300 ; free virtual = 100748
# puts "Running write_debug_probes for CL: \[[clock format [clock seconds] -format {%a %b %d %H:%M:%S %Y}]\]"
Running write_debug_probes for CL: [Tue Dec 18 04:34:38 2018]
# write_debug_probes -force -cell $CL_PATH $partialLTX
# report_timing_summary -file $timingRPT
report_timing_summary: Time (s): cpu = 00:02:40 ; elapsed = 00:00:40 . Memory (MB): peak = 9921.410 ; gain = 7.023 ; free physical = 62782 ; free virtual = 100233
# report_io -file $ioRPT
# close [open "../scripts/bitgen_success.txt" "w"]
# set have_prsv [get_cells -hier -regexp ${CL_PATH}.*ddr_stat.*new_scratch_prsv_sh_ddr.*]
# set have_ddr0 [get_cells -hier -regexp ${CL_PATH}.*ddr_cores\.DDR4_0]
# set have_ddr1 [get_cells -hier -regexp ${CL_PATH}.*ddr_cores\.DDR4_1]
# set have_ddr2 [get_cells -hier -regexp ${CL_PATH}.*ddr_cores\.DDR4_2]
# set PRSV_MSG "PRSV"
# set DDR0_MSG "DDR0"
# set DDR1_MSG "DDR1"
# set DDR2_MSG "DDR2"
# if {$have_prsv eq ""} {
#    puts "No data retention support - missing $PRSV_MSG"
# } else {
#    puts "SUPPORTS $PRSV_MSG"
# }
No data retention support - missing PRSV
# if {$have_ddr0 eq ""} {
#    puts "No $DDR0_MSG"
# } else {
#    puts "SUPPORTS $DDR0_MSG"
# }
No DDR0
# if {$have_ddr1 eq ""} {
#    puts "No $DDR1_MSG"
# } else {
#    puts "SUPPORTS $DDR1_MSG"
# }
No DDR1
# if {$have_ddr2 eq ""} {
#    puts "No $DDR2_MSG"
# } else {
#    puts "SUPPORTS $DDR2_MSG"
# }
No DDR2
# puts "Generating default power report: \[[clock format [clock seconds] -format {%a %b %d %H:%M:%S %Y}]\]"
Generating default power report: [Tue Dec 18 04:35:23 2018]
# report_power -file $powerDefaultRPT
report_power: Time (s): cpu = 00:02:29 ; elapsed = 00:01:10 . Memory (MB): peak = 9981.535 ; gain = 60.125 ; free physical = 62424 ; free virtual = 99877
# puts "Generating power report with static switching activity: \[[clock format [clock seconds] -format {%a %b %d %H:%M:%S %Y}]\]"
Generating power report with static switching activity: [Tue Dec 18 04:36:33 2018]
# reset_switching_activity -all
reset_switching_activity: Time (s): cpu = 00:00:17 ; elapsed = 00:00:17 . Memory (MB): peak = 9981.535 ; gain = 0.000 ; free physical = 62342 ; free virtual = 99795
# set_switching_activity -type lut -toggle_rate 12.500000 -static_probability 0.500000 -all
# set_switching_activity -type register -toggle_rate 12.500000 -static_probability 0.500000 -all
# set_switching_activity -type shift_register -toggle_rate 12.500000 -static_probability 0.500000 -all
# set_switching_activity -type lut_ram -toggle_rate 12.500000 -static_probability 0.500000 -all
# set_switching_activity -type bram -toggle_rate 12.500000 -static_probability 0.500000 -all
# set_switching_activity -type dsp -toggle_rate 12.500000 -static_probability 0.500000 -all
# set_switching_activity -type gt_rxdata -toggle_rate 50.000000 -static_probability 0.500000 -all
# set_switching_activity -type gt_txdata -toggle_rate 50.000000 -static_probability 0.500000 -all
# set_switching_activity -type io_output -toggle_rate 12.000000 -static_probability 0.500000 -all
# report_power -file $powerStaticRPT
report_power: Time (s): cpu = 00:01:11 ; elapsed = 00:00:37 . Memory (MB): peak = 9997.547 ; gain = 16.012 ; free physical = 62329 ; free virtual = 99783
# close_design
close_design: Time (s): cpu = 00:00:07 ; elapsed = 00:00:07 . Memory (MB): peak = 9997.547 ; gain = 0.000 ; free physical = 65376 ; free virtual = 102831
# puts "Ingest end time: \[[clock format [clock seconds] -format {%a %b %d %H:%M:%S %Y}]\]"
Ingest end time: [Tue Dec 18 04:37:48 2018]
[stderr]
